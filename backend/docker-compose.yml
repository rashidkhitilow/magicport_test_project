version: '3'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: magicport_project.com/php
    container_name: backend
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: backend
      SERVICE_TAGS: dev
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html/
    networks:
      - app-network

  frontend:
    stdin_open: true
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ../frontend:/var/www/html/
    ports:
      - "3000:3000"
    networks:
      - app-network

  #Nginx Service
  webserver:
    depends_on:
      - backend
      - frontend
    build:
      context: ./nginx
      dockerfile: Dockerfile
    #volumes:
    #  - ../logs/server/:/var/log/nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    networks:
      - app-network

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
#    volumes:
#      - ../mysql:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - app-network

  composer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html:delegated
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge
